Blockly.Blocks['wppconnect_login'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Fazer login no WhatsApp com o número")
        .appendField(new Blockly.FieldTextInput("+55"), "number")
        .appendField("e a sessão")
        .appendField(new Blockly.FieldTextInput("my_session"), "session");
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(230);
    this.setTooltip("");
    this.setHelpUrl("");
  }
};

Blockly.JavaScript['wppconnect_login'] = function(block) {
  var text_number = block.getFieldValue('number');
  var text_session = block.getFieldValue('session');
  var code = 'wppconnect.login("' + text_number + '", "' + text_session + '");\n';
  return code;
};

Blockly.Blocks['wppconnect_send_message'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Enviar mensagem")
        .appendField(new Blockly.FieldTextInput("Digite sua mensagem aqui"), "message");
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour("red");
    this.setTooltip("");
    this.setHelpUrl("");  
  }
};

Blockly.JavaScript['wppconnect_send_message'] = function(block) {
  var text_message = block.getFieldValue('message');
  var code = 'wppconnect.sendMessage("' + text_message + '");\n';
  return code;
};

Blockly.Blocks['wppconnect_logout'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Fazer logout do WhatsApp");
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(230);
    this.setTooltip("");
    this.setHelpUrl("");
  }
};

Blockly.JavaScript['wppconnect_logout'] = function(block) {
  var code = 'wppconnect.logout();\n';
  return code;
};

function salvarBlocos() {
  var xml = Blockly.Xml.workspaceToDom(Blockly.mainWorkspace);
  var xmlText = Blockly.Xml.domToPrettyText(xml); // ou domToText para texto sem formatação
  // salvar xmlText em um arquivo ou banco de dados
  console.log(xmlText);
  save = xmlText; // imprime o xml no console para fins de depuração
}
function carregarBlocos() {
   // Obter o XML salvo do armazenament

   // Converter o XML em um elemento DOM
   var xml_dom = Blockly.Xml.textToDom(save);
 
   // Carregar o DOM em um espaço de trabalho do Blockly
   Blockly.Xml.domToWorkspace(xml_dom, workspace);
}

var save;

const myVariable = Blockly.Variables.getOrCreateVariablePackage(
  Blockly.getMainWorkspace(),
  null,
  'my_variable'
);

Blockly.Blocks['meu_bloco'] = {
  init: function() {
      this.appendDummyInput()
          .appendField('Mensagem recebida:')
          .appendField(new Blockly.FieldVariable('my_variable'), 'VAR');
      this.setInputsInline(true);
      this.setOutput(true, null);
      this.setColour(230);
      this.setTooltip('');
      this.setHelpUrl('');
  }
};

Blockly.JavaScript['meubloco'] = function(block) {
  const variableName = Blockly.JavaScript.variableDB.getName(
      block.getFieldValue('VAR'),
      Blockly.Variables.NAMETYPE
  );
  const code = variableName + '.value';
  return [code, Blockly.JavaScript.ORDER_NONE];
};
